name: lucas ubuntu-vps

on:
  schedule:
    - cron: '0 */5 * * *' # 每5小时运行一次
  workflow_dispatch:

jobs:
  vps-session:
    runs-on: ubuntu-latest
    timeout-minutes: 300 # 5小时
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置主机名为 lucas-vps
        run: sudo hostnamectl set-hostname lucas-vps

      - name: 下载 VPS 备份（如果有）
        uses: actions/download-artifact@v4
        with:
          name: vps-backup
          path: ./backup
        continue-on-error: true

      - name: 安装必要工具
        run: |
          sudo apt update
          sudo apt install -y curl unzip sudo net-tools neofetch

      - name: 安装 cloudflared
        run: |
          sudo mkdir -p --mode=0755 /usr/share/keyrings
          curl -fsSL https://pkg.cloudflare.com/cloudflare-main.gpg | sudo tee /usr/share/keyrings/cloudflare-main.gpg >/dev/null
          echo 'deb [signed-by=/usr/share/keyrings/cloudflare-main.gpg] https://pkg.cloudflare.com/cloudflared any main' | sudo tee /etc/apt/sources.list.d/cloudflared.list
          sudo apt-get update && sudo apt-get install -y cloudflared
          sudo cloudflared service install ${{ secrets.CF_TOKEN }}

      - name: 安装 Docker (官方脚本)
        run: |
          sudo apt-get remove -y containerd docker.io || true
          curl -fsSL https://get.docker.com | sh
          sudo systemctl enable docker
          sudo systemctl start docker

      - name: 安装官方 Tailscale 脚本
        run: |
          curl -fsSL https://tailscale.com/install.sh | sh

      - name: 恢复备份文件
        run: |
          if [ -f ./backup/backup.zip ]; then
            unzip -o ./backup/backup.zip -d /
          else
            echo "未找到备份，开始全新安装"
          fi

      - name: 恢复 Tailscale 状态
        run: |
          if [ -f /opt/vps-backup/data/tailscaled.state ]; then
            sudo mkdir -p /var/lib/tailscale
            sudo cp /opt/vps-backup/data/tailscaled.state /var/lib/tailscale/tailscaled.state
            sudo chmod 600 /var/lib/tailscale/tailscaled.state
          fi

      - name: 启动 Tailscale
        run: |
          sudo tailscaled &
          sleep 8
          sudo tailscale up --authkey ${{ secrets.TAILSCALE_AUTHKEY }} --hostname=lucas-vps || echo "Tailscale 已启动"

      - name: 创建用户 lucas 并赋予 sudo 权限
        run: |
          if ! id -u lucas >/dev/null 2>&1; then
            sudo useradd -m -s /bin/bash lucas
            echo "lucas:lucas1234" | sudo chpasswd
            sudo usermod -aG sudo lucas
            echo "lucas ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/lucas
          fi

      - name: 部署 agsb 容器
        run: |
          sudo docker run -d \
            --restart=always \
            --name agsb \
            -p 80:3000 \
            -p 21345:21345 \
            -p 42969:42969/udp \
            -e vmpt="21345" \
            -e hypt="42969" \
            -e argo="y" \
            -e uuid="${{ secrets.UUID }}" \
            lalucas/argosb:latest

      - name: 显示 Tailscale IP
        run: |
          echo "🔗 Tailscale IP:"
          tailscale ip -4 || echo "未获取到 Tailscale IP"

      - name: 启动 tmate 会话以支持 SSH 访问
        uses: mxschmitt/action-tmate@v3

      - name: 保持 VPS 运行
        run: sleep 18000 # 5小时

      - name: 备份 VPS 数据和 Tailscale 状态
        run: |
          sudo mkdir -p /opt/vps-backup/data
          sudo cp /var/lib/tailscale/tailscaled.state /opt/vps-backup/data/
          sudo chown -R $USER:$USER /opt/vps-backup
          zip -r backup.zip /opt/vps-backup

      - name: 上传 VPS 备份文件
        uses: actions/upload-artifact@v4
        with:
          name: vps-backup
          path: backup.zip
